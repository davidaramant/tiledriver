<#
// Copyright (c) 2016, David Aramant
// Distributed under the 3-clause BSD license.  For full terms see the file LICENSE. 
#>
<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(SolutionDir)Tiledriver.Metadata\bin\$(Configuration)\Tiledriver.Metadata.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Tiledriver.Metadata" #>
<#@ output extension=".cs" #>
// Copyright (c) 2016, David Aramant
// Distributed under the 3-clause BSD license.  For full terms see the file LICENSE. 

using Tiledriver.Core.FormatModels.Uwmf;
using NUnit.Framework;

namespace Tiledriver.Core.Tests.FormatModels.Uwmf.Parsing
{
    public static partial class UwmfComparison
    {
<#
foreach( var block in UwmfDefinitions.Blocks )
{
#>
        public static void AssertEqual( <#= block.ClassName.ToPascalCase() #> actual, <#= block.ClassName.ToPascalCase() #> expected )
        {
<#
    foreach( var property in block.Properties.Where( p => p.IsScalarField ) )
    {
#>
            Assert.That(
                actual.<#= property.PropertyName #>,
                Is.EqualTo( expected.<#= property.PropertyName #> ),
                "Found difference in <#= block.ClassName.ToPascalCase() #> <#= property.PropertyName #>" );
<#
    }
    foreach( var subBlock in block.Properties.Where( p => !p.IsScalarField ) )
    {
#>
            Assert.That(
                actual.<#= subBlock.PropertyName #>.Count,
                Is.EqualTo( expected.<#= subBlock.PropertyName #>.Count ),
                "Found unequal number of <#= block.ClassName.ToPascalCase() #> <#= subBlock.PropertyName #>" );
            for( int i = 0; i < expected.<#= subBlock.PropertyName #>.Count; i++ )
            {
                AssertEqual( 
                    actual.<#= subBlock.PropertyName #>[i],
                    expected.<#= subBlock.PropertyName #>[i] );
            }
<#
    }  
#>
        }
<#
}
#>
    }
}