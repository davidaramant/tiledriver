<#
/*
** UwmfComparison.Generated.tt
**
**---------------------------------------------------------------------------
** Copyright (c) 2016, David Aramant
** All rights reserved.
**
** Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions
** are met:
**
** 1. Redistributions of source code must retain the above copyright
**    notice, this list of conditions and the following disclaimer.
** 2. Redistributions in binary form must reproduce the above copyright
**    notice, this list of conditions and the following disclaimer in the
**    documentation and/or other materials provided with the distribution.
** 3. The name of the author may not be used to endorse or promote products
**    derived from this software without specific prior written permission.
**
** THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
** IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
** OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
** IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
** INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
** NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
** THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**---------------------------------------------------------------------------
**
**
*/#>
<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(SolutionDir)Tiledriver.UwmfMetadata\bin\$(Configuration)\Tiledriver.UwmfMetadata.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Tiledriver.UwmfMetadata" #>
<#@ output extension=".cs" #>
/*
** UwmfComparison.Generated.cs
**
**---------------------------------------------------------------------------
** Copyright (c) 2016, David Aramant
** All rights reserved.
**
** Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions
** are met:
**
** 1. Redistributions of source code must retain the above copyright
**    notice, this list of conditions and the following disclaimer.
** 2. Redistributions in binary form must reproduce the above copyright
**    notice, this list of conditions and the following disclaimer in the
**    documentation and/or other materials provided with the distribution.
** 3. The name of the author may not be used to endorse or promote products
**    derived from this software without specific prior written permission.
**
** THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
** IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
** OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
** IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
** INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
** NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
** THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**---------------------------------------------------------------------------
**
**
*/

using Tiledriver.Core.Uwmf;
using NUnit.Framework;

namespace Tiledriver.Core.Tests.Uwmf.Parsing
{
    public static partial class UwmfComparison
    {
<#
foreach( var block in UwmfDefinitions.Blocks )
{
#>
        public static void AssertEqual( <#= block.PascalCaseName #> actual, <#= block.PascalCaseName #> expected )
        {
<#
    foreach( var property in block.Properties )
    {
#>
            Assert.That(
                actual.<#= property.PascalCaseName #>,
                Is.EqualTo( expected.<#= property.PascalCaseName #> ),
                "Found difference in <#= block.PascalCaseName #> <#= property.PascalCaseName #>" );
<#
    }
    if( block.CanHaveUnknownProperties )
    {
#>
            AssertEqual(
                actual.UnknownProperties,
                expected.UnknownProperties,
                "<#= block.PascalCaseName #>" );
<#
    }
    foreach( var subBlock in block.SubBlocks )
    {
#>
            Assert.That(
                actual.<#= subBlock.PluralPascalCaseName #>.Count,
                Is.EqualTo( expected.<#= subBlock.PluralPascalCaseName #>.Count ),
                "Found unequal number of <#= block.PascalCaseName #> <#= subBlock.PluralPascalCaseName #>" );
            for( int i = 0; i < expected.<#= subBlock.PluralPascalCaseName #>.Count; i++ )
            {
                AssertEqual( 
                    actual.<#= subBlock.PluralPascalCaseName #>[i],
                    expected.<#= subBlock.PluralPascalCaseName #>[i] );
            }
<#
    }
    if( block.CanHaveUnknownBlocks )
    {
#>
            Assert.That(
                actual.UnknownBlocks.Count,
                Is.EqualTo( expected.UnknownBlocks.Count ),
                "Found unequal number of <#= block.PascalCaseName #> UnknownBlocks" );
            for( int i = 0; i < expected.UnknownBlocks.Count; i++ )
            {
                AssertEqual( 
                    actual.UnknownBlocks[i],
                    expected.UnknownBlocks[i] );
            }
<#
    }
#>
        }
<#
}
#>
    }
}