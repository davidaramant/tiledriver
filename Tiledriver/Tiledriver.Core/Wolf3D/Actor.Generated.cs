// Copyright (c) 2016, David Aramant
// Distributed under the 3-clause BSD license.  For full terms see the file LICENSE. 

// <autogenerated>
// This code was generated by a tool. Any changes made manually will be lost
// the next time this code is regenerated.
// </autogenerated>

namespace Tiledriver.Core.Wolf3D
{
    /// <summary>
    /// Actor
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute( "RichEnumGenerator", "1.0.0.0" )]
    public sealed partial class Actor
    {
        private readonly string _instanceName;
        public readonly System.Int32 ID;
        public readonly System.String Category;
        public readonly System.Boolean Solid;

        /// <summary>
        /// Player1Start
        /// </summary>
        public static readonly Actor Player1Start = new Actor(
            instanceName: "Player1Start",
            iD: 1,   
            category: CategoryType.Special,   
            solid: false  
        );
        /// <summary>
        /// PatrolPoint
        /// </summary>
        public static readonly Actor PatrolPoint = new Actor(
            instanceName: "PatrolPoint",
            iD: 10,   
            category: CategoryType.Special,   
            solid: false  
        );
        /// <summary>
        /// Puddle
        /// </summary>
        public static readonly Actor Puddle = new Actor(
            instanceName: "Puddle",
            iD: 33,   
            category: CategoryType.Decorations,   
            solid: false  
        );
        /// <summary>
        /// GreenBarrel
        /// </summary>
        public static readonly Actor GreenBarrel = new Actor(
            instanceName: "GreenBarrel",
            iD: 34,   
            category: CategoryType.Decorations,   
            solid: true  
        );
        /// <summary>
        /// TableWithChairs
        /// </summary>
        public static readonly Actor TableWithChairs = new Actor(
            instanceName: "TableWithChairs",
            iD: 35,   
            category: CategoryType.Decorations,   
            solid: true  
        );
        /// <summary>
        /// FloorLamp
        /// </summary>
        public static readonly Actor FloorLamp = new Actor(
            instanceName: "FloorLamp",
            iD: 36,   
            category: CategoryType.Decorations,   
            solid: true  
        );
        /// <summary>
        /// Chandelier
        /// </summary>
        public static readonly Actor Chandelier = new Actor(
            instanceName: "Chandelier",
            iD: 37,   
            category: CategoryType.Decorations,   
            solid: false  
        );
        /// <summary>
        /// HangedMan
        /// </summary>
        public static readonly Actor HangedMan = new Actor(
            instanceName: "HangedMan",
            iD: 38,   
            category: CategoryType.Decorations,   
            solid: true  
        );
        /// <summary>
        /// WhitePillar
        /// </summary>
        public static readonly Actor WhitePillar = new Actor(
            instanceName: "WhitePillar",
            iD: 40,   
            category: CategoryType.Decorations,   
            solid: true  
        );
        /// <summary>
        /// GreenPlant
        /// </summary>
        public static readonly Actor GreenPlant = new Actor(
            instanceName: "GreenPlant",
            iD: 41,   
            category: CategoryType.Decorations,   
            solid: true  
        );
        /// <summary>
        /// SkeletonFlat
        /// </summary>
        public static readonly Actor SkeletonFlat = new Actor(
            instanceName: "SkeletonFlat",
            iD: 42,   
            category: CategoryType.Decorations,   
            solid: false  
        );
        /// <summary>
        /// Sink
        /// </summary>
        public static readonly Actor Sink = new Actor(
            instanceName: "Sink",
            iD: 43,   
            category: CategoryType.Decorations,   
            solid: true  
        );
        /// <summary>
        /// BrownPlant
        /// </summary>
        public static readonly Actor BrownPlant = new Actor(
            instanceName: "BrownPlant",
            iD: 44,   
            category: CategoryType.Decorations,   
            solid: true  
        );
        /// <summary>
        /// Vase
        /// </summary>
        public static readonly Actor Vase = new Actor(
            instanceName: "Vase",
            iD: 45,   
            category: CategoryType.Decorations,   
            solid: true  
        );
        /// <summary>
        /// BareTable
        /// </summary>
        public static readonly Actor BareTable = new Actor(
            instanceName: "BareTable",
            iD: 46,   
            category: CategoryType.Decorations,   
            solid: true  
        );
        /// <summary>
        /// CeilingLight
        /// </summary>
        public static readonly Actor CeilingLight = new Actor(
            instanceName: "CeilingLight",
            iD: 47,   
            category: CategoryType.Decorations,   
            solid: false  
        );
        /// <summary>
        /// KitchenStuff
        /// </summary>
        public static readonly Actor KitchenStuff = new Actor(
            instanceName: "KitchenStuff",
            iD: 48,   
            category: CategoryType.Decorations,   
            solid: false  
        );
        /// <summary>
        /// SuitOfArmor
        /// </summary>
        public static readonly Actor SuitOfArmor = new Actor(
            instanceName: "SuitOfArmor",
            iD: 49,   
            category: CategoryType.Decorations,   
            solid: true  
        );
        /// <summary>
        /// HangingCage
        /// </summary>
        public static readonly Actor HangingCage = new Actor(
            instanceName: "HangingCage",
            iD: 50,   
            category: CategoryType.Decorations,   
            solid: true  
        );
        /// <summary>
        /// SkeletonCage
        /// </summary>
        public static readonly Actor SkeletonCage = new Actor(
            instanceName: "SkeletonCage",
            iD: 51,   
            category: CategoryType.Decorations,   
            solid: true  
        );
        /// <summary>
        /// Bones1
        /// </summary>
        public static readonly Actor Bones1 = new Actor(
            instanceName: "Bones1",
            iD: 52,   
            category: CategoryType.Decorations,   
            solid: false  
        );
        /// <summary>
        /// BunkBed
        /// </summary>
        public static readonly Actor BunkBed = new Actor(
            instanceName: "BunkBed",
            iD: 55,   
            category: CategoryType.Decorations,   
            solid: true  
        );
        /// <summary>
        /// Basket
        /// </summary>
        public static readonly Actor Basket = new Actor(
            instanceName: "Basket",
            iD: 56,   
            category: CategoryType.Decorations,   
            solid: false  
        );
        /// <summary>
        /// Barrel
        /// </summary>
        public static readonly Actor Barrel = new Actor(
            instanceName: "Barrel",
            iD: 68,   
            category: CategoryType.Decorations,   
            solid: true  
        );
        /// <summary>
        /// Well
        /// </summary>
        public static readonly Actor Well = new Actor(
            instanceName: "Well",
            iD: 69,   
            category: CategoryType.Decorations,   
            solid: true  
        );
        /// <summary>
        /// EmptyWell
        /// </summary>
        public static readonly Actor EmptyWell = new Actor(
            instanceName: "EmptyWell",
            iD: 70,   
            category: CategoryType.Decorations,   
            solid: true  
        );
        /// <summary>
        /// Flag
        /// </summary>
        public static readonly Actor Flag = new Actor(
            instanceName: "Flag",
            iD: 72,   
            category: CategoryType.Decorations,   
            solid: true  
        );
        /// <summary>
        /// CallApogee
        /// </summary>
        public static readonly Actor CallApogee = new Actor(
            instanceName: "CallApogee",
            iD: 73,   
            category: CategoryType.Decorations,   
            solid: false  
        );
        /// <summary>
        /// Bones2
        /// </summary>
        public static readonly Actor Bones2 = new Actor(
            instanceName: "Bones2",
            iD: 74,   
            category: CategoryType.Decorations,   
            solid: false  
        );
        /// <summary>
        /// Bones3
        /// </summary>
        public static readonly Actor Bones3 = new Actor(
            instanceName: "Bones3",
            iD: 75,   
            category: CategoryType.Decorations,   
            solid: false  
        );
        /// <summary>
        /// Bones4
        /// </summary>
        public static readonly Actor Bones4 = new Actor(
            instanceName: "Bones4",
            iD: 76,   
            category: CategoryType.Decorations,   
            solid: false  
        );
        /// <summary>
        /// Pots
        /// </summary>
        public static readonly Actor Pots = new Actor(
            instanceName: "Pots",
            iD: 77,   
            category: CategoryType.Decorations,   
            solid: false  
        );
        /// <summary>
        /// Stove
        /// </summary>
        public static readonly Actor Stove = new Actor(
            instanceName: "Stove",
            iD: 78,   
            category: CategoryType.Decorations,   
            solid: true  
        );
        /// <summary>
        /// Spears
        /// </summary>
        public static readonly Actor Spears = new Actor(
            instanceName: "Spears",
            iD: 79,   
            category: CategoryType.Decorations,   
            solid: false  
        );
        /// <summary>
        /// Vines
        /// </summary>
        public static readonly Actor Vines = new Actor(
            instanceName: "Vines",
            iD: 80,   
            category: CategoryType.Decorations,   
            solid: false  
        );
        /// <summary>
        /// FakeHitler
        /// </summary>
        public static readonly Actor FakeHitler = new Actor(
            instanceName: "FakeHitler",
            iD: 18,   
            category: CategoryType.Bosses,   
            solid: false  
        );
        /// <summary>
        /// MechaHitler
        /// </summary>
        public static readonly Actor MechaHitler = new Actor(
            instanceName: "MechaHitler",
            iD: 19,   
            category: CategoryType.Bosses,   
            solid: false  
        );
        /// <summary>
        /// Clip
        /// </summary>
        public static readonly Actor Clip = new Actor(
            instanceName: "Clip",
            iD: 59,   
            category: CategoryType.Ammo,   
            solid: false  
        );
        /// <summary>
        /// Cross
        /// </summary>
        public static readonly Actor Cross = new Actor(
            instanceName: "Cross",
            iD: 62,   
            category: CategoryType.Treasure,   
            solid: false  
        );
        /// <summary>
        /// Chalice
        /// </summary>
        public static readonly Actor Chalice = new Actor(
            instanceName: "Chalice",
            iD: 63,   
            category: CategoryType.Treasure,   
            solid: false  
        );
        /// <summary>
        /// ChestofJewels
        /// </summary>
        public static readonly Actor ChestofJewels = new Actor(
            instanceName: "ChestofJewels",
            iD: 64,   
            category: CategoryType.Treasure,   
            solid: false  
        );
        /// <summary>
        /// Crown
        /// </summary>
        public static readonly Actor Crown = new Actor(
            instanceName: "Crown",
            iD: 65,   
            category: CategoryType.Treasure,   
            solid: false  
        );
        /// <summary>
        /// Hans
        /// </summary>
        public static readonly Actor Hans = new Actor(
            instanceName: "Hans",
            iD: 16,   
            category: CategoryType.Bosses,   
            solid: false  
        );
        /// <summary>
        /// Gretel
        /// </summary>
        public static readonly Actor Gretel = new Actor(
            instanceName: "Gretel",
            iD: 20,   
            category: CategoryType.Bosses,   
            solid: false  
        );
        /// <summary>
        /// Schabbs
        /// </summary>
        public static readonly Actor Schabbs = new Actor(
            instanceName: "Schabbs",
            iD: 17,   
            category: CategoryType.Bosses,   
            solid: false  
        );
        /// <summary>
        /// Gift
        /// </summary>
        public static readonly Actor Gift = new Actor(
            instanceName: "Gift",
            iD: 21,   
            category: CategoryType.Bosses,   
            solid: false  
        );
        /// <summary>
        /// FatFace
        /// </summary>
        public static readonly Actor FatFace = new Actor(
            instanceName: "FatFace",
            iD: 22,   
            category: CategoryType.Bosses,   
            solid: false  
        );
        /// <summary>
        /// Blinky
        /// </summary>
        public static readonly Actor Blinky = new Actor(
            instanceName: "Blinky",
            iD: 29,   
            category: CategoryType.Enemy,   
            solid: false  
        );
        /// <summary>
        /// Inky
        /// </summary>
        public static readonly Actor Inky = new Actor(
            instanceName: "Inky",
            iD: 32,   
            category: CategoryType.Enemy,   
            solid: false  
        );
        /// <summary>
        /// Pinky
        /// </summary>
        public static readonly Actor Pinky = new Actor(
            instanceName: "Pinky",
            iD: 31,   
            category: CategoryType.Enemy,   
            solid: false  
        );
        /// <summary>
        /// Clyde
        /// </summary>
        public static readonly Actor Clyde = new Actor(
            instanceName: "Clyde",
            iD: 30,   
            category: CategoryType.Enemy,   
            solid: false  
        );
        /// <summary>
        /// Guard
        /// </summary>
        public static readonly Actor Guard = new Actor(
            instanceName: "Guard",
            iD: 11,   
            category: CategoryType.Enemy,   
            solid: false  
        );
        /// <summary>
        /// DeadGuard
        /// </summary>
        public static readonly Actor DeadGuard = new Actor(
            instanceName: "DeadGuard",
            iD: 81,   
            category: CategoryType.Enemy,   
            solid: false  
        );
        /// <summary>
        /// Dog
        /// </summary>
        public static readonly Actor Dog = new Actor(
            instanceName: "Dog",
            iD: 14,   
            category: CategoryType.Enemy,   
            solid: false  
        );
        /// <summary>
        /// Officer
        /// </summary>
        public static readonly Actor Officer = new Actor(
            instanceName: "Officer",
            iD: 12,   
            category: CategoryType.Enemy,   
            solid: false  
        );
        /// <summary>
        /// Mutant
        /// </summary>
        public static readonly Actor Mutant = new Actor(
            instanceName: "Mutant",
            iD: 15,   
            category: CategoryType.Enemy,   
            solid: false  
        );
        /// <summary>
        /// WolfensteinSS
        /// </summary>
        public static readonly Actor WolfensteinSS = new Actor(
            instanceName: "WolfensteinSS",
            iD: 13,   
            category: CategoryType.Enemy,   
            solid: false  
        );
        /// <summary>
        /// DogFood
        /// </summary>
        public static readonly Actor DogFood = new Actor(
            instanceName: "DogFood",
            iD: 39,   
            category: CategoryType.Health,   
            solid: false  
        );
        /// <summary>
        /// Food
        /// </summary>
        public static readonly Actor Food = new Actor(
            instanceName: "Food",
            iD: 57,   
            category: CategoryType.Health,   
            solid: false  
        );
        /// <summary>
        /// Medikit
        /// </summary>
        public static readonly Actor Medikit = new Actor(
            instanceName: "Medikit",
            iD: 58,   
            category: CategoryType.Health,   
            solid: false  
        );
        /// <summary>
        /// OneUp
        /// </summary>
        public static readonly Actor OneUp = new Actor(
            instanceName: "OneUp",
            iD: 66,   
            category: CategoryType.Health,   
            solid: false  
        );
        /// <summary>
        /// Blood
        /// </summary>
        public static readonly Actor Blood = new Actor(
            instanceName: "Blood",
            iD: 67,   
            category: CategoryType.Health,   
            solid: false  
        );
        /// <summary>
        /// Gibs
        /// </summary>
        public static readonly Actor Gibs = new Actor(
            instanceName: "Gibs",
            iD: 71,   
            category: CategoryType.Health,   
            solid: false  
        );
        /// <summary>
        /// GoldKey
        /// </summary>
        public static readonly Actor GoldKey = new Actor(
            instanceName: "GoldKey",
            iD: 53,   
            category: CategoryType.Key,   
            solid: false  
        );
        /// <summary>
        /// SilverKey
        /// </summary>
        public static readonly Actor SilverKey = new Actor(
            instanceName: "SilverKey",
            iD: 54,   
            category: CategoryType.Key,   
            solid: false  
        );
        /// <summary>
        /// MachineGun
        /// </summary>
        public static readonly Actor MachineGun = new Actor(
            instanceName: "MachineGun",
            iD: 60,   
            category: CategoryType.Weapons,   
            solid: false  
        );
        /// <summary>
        /// GatlingGunUpgrade
        /// </summary>
        public static readonly Actor GatlingGunUpgrade = new Actor(
            instanceName: "GatlingGunUpgrade",
            iD: 61,   
            category: CategoryType.Weapons,   
            solid: false  
        );

        private Actor(
            string instanceName,
            System.Int32 iD,   
            System.String category,   
            System.Boolean solid  
        )
        {
            _instanceName = instanceName;
            ID = iD; 
            Category = category; 
            Solid = solid; 
        }

        /// <summary>
        /// Returns the name of this instance.
        /// </summary>
        /// <returns>
        /// A <see cref="System.String" /> that represents this instance.
        /// </returns>
        public override string ToString()
        {
            return _instanceName;
        }

        /// <summary>
        /// Returns all the enumeration values.
        /// </summary>
        public static System.Collections.Generic.IEnumerable<Actor> GetAll()
        {
            yield return Player1Start;
            yield return PatrolPoint;
            yield return Puddle;
            yield return GreenBarrel;
            yield return TableWithChairs;
            yield return FloorLamp;
            yield return Chandelier;
            yield return HangedMan;
            yield return WhitePillar;
            yield return GreenPlant;
            yield return SkeletonFlat;
            yield return Sink;
            yield return BrownPlant;
            yield return Vase;
            yield return BareTable;
            yield return CeilingLight;
            yield return KitchenStuff;
            yield return SuitOfArmor;
            yield return HangingCage;
            yield return SkeletonCage;
            yield return Bones1;
            yield return BunkBed;
            yield return Basket;
            yield return Barrel;
            yield return Well;
            yield return EmptyWell;
            yield return Flag;
            yield return CallApogee;
            yield return Bones2;
            yield return Bones3;
            yield return Bones4;
            yield return Pots;
            yield return Stove;
            yield return Spears;
            yield return Vines;
            yield return FakeHitler;
            yield return MechaHitler;
            yield return Clip;
            yield return Cross;
            yield return Chalice;
            yield return ChestofJewels;
            yield return Crown;
            yield return Hans;
            yield return Gretel;
            yield return Schabbs;
            yield return Gift;
            yield return FatFace;
            yield return Blinky;
            yield return Inky;
            yield return Pinky;
            yield return Clyde;
            yield return Guard;
            yield return DeadGuard;
            yield return Dog;
            yield return Officer;
            yield return Mutant;
            yield return WolfensteinSS;
            yield return DogFood;
            yield return Food;
            yield return Medikit;
            yield return OneUp;
            yield return Blood;
            yield return Gibs;
            yield return GoldKey;
            yield return SilverKey;
            yield return MachineGun;
            yield return GatlingGunUpgrade;
        }
    }
}

